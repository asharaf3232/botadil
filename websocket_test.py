# -*- coding: utf-8 -*-
# =================================================================
# --- ๐ ุงููุฑุญูุฉ ุงูุฃููู: ุจูุงุก ุฃุณุงุณ ุงูู WebSocket (ุงูุฅุตุฏุงุฑ 0.1) ---
# =================================================================
# ุงููุฏู: ุงูุงุชุตุงู ุจู WebSocket ุงูุนุงู ูููุตุฉ OKX ูุงูุงุดุชุฑุงู ูู
#        ุจูุงูุงุช ุงูุฃุณุนุงุฑ ุงููุญุธูุฉ (tickers) ูุนููุฉ BTC/USDT.
#
# ููุชุซุจูุช: pip install websockets
# =================================================================

import asyncio
import websockets
import json
import logging

# --- ุงูุฅุนุฏุงุฏุงุช ุงูุฃุณุงุณูุฉ ---
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
OKX_PUBLIC_WEBSOCKET_URL = "wss://ws.okx.com:8443/ws/v5/public"

async def okx_websocket_listener():
    """
    ูุชุตู ุจู OKX WebSocketุ ูุดุชุฑู ูู ููุงุฉ ุงูุฃุณุนุงุฑุ ููุณุชูุน ููุชุญุฏูุซุงุช.
    """
    # 1. ุฅุนุฏุงุฏ ุฑุณุงูุฉ ุงูุงุดุชุฑุงู (Subscribe Message)
    #    ูุญู ูุทูุจ ูู ุงูููุตุฉ ุฃู ุชุฑุณู ููุง ุชุญุฏูุซุงุช ูู ููุงุฉ 'tickers'
    #    ูุฃุฏุงุฉ ุงูุชุฏุงูู 'BTC-USDT'.
    subscribe_message = {
        "op": "subscribe",
        "args": [
            {
                "channel": "tickers",
                "instId": "BTC-USDT"
            }
        ]
    }

    # 2. ุญููุฉ ุงุชุตุงู ูุง ููุงุฆูุฉ ูุถูุงู ุฅุนุงุฏุฉ ุงูุงุชุตุงู
    while True:
        try:
            # ุงุณุชุฎุฏุงู 'async with' ูุถูู ุฅุบูุงู ุงูุงุชุตุงู ุจุดูู ุณููู
            async with websockets.connect(OKX_PUBLIC_WEBSOCKET_URL) as websocket:
                logging.info("โ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ ุจู OKX WebSocket.")
                
                # 3. ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุงุดุชุฑุงู ููููุตุฉ
                await websocket.send(json.dumps(subscribe_message))
                logging.info(f"๐ค ุชู ุฅุฑุณุงู ุทูุจ ุงูุงุดุชุฑุงู: {subscribe_message}")

                # 4. ุญููุฉ ุงุณุชูุงุน ููุฑุณุงุฆู ุงููุงุฑุฏุฉ
                while True:
                    # ุงูุชุธุฑ ูุตูู ุฑุณุงูุฉ ูู ุงูุฎุงุฏู
                    response = await websocket.recv()
                    
                    # OKX ุชุฑุณู ุฑุณุงูุฉ "ping" ูู 30 ุซุงููุฉ ููุญูุงุธ ุนูู ุงูุงุชุตุงู.
                    # ูุฌุจ ุฃู ูุฑุฏ ุจู "pong" ูุชุฌูุจ ูุทุน ุงูุงุชุตุงู.
                    if response == 'ping':
                        await websocket.send('pong')
                        logging.info("โก๏ธ ุงุณุชููุช 'ping'ุ ุฃุฑุณูุช 'pong' ููุญูุงุธ ุนูู ุงูุงุชุตุงู.")
                        continue

                    # ุชุญููู ุงูุฑุณุงูุฉ (ุงููุต) ุฅูู ูุงููุณ ุจุงูุซูู (JSON)
                    data = json.loads(response)

                    # ุทุจุงุนุฉ ุจูุงูุงุช ุงูุณุนุฑ ุงููุญุธู ููุท
                    if 'data' in data and data.get('arg', {}).get('channel') == 'tickers':
                        ticker_data = data['data'][0]
                        last_price = ticker_data.get('last')
                        logging.info(f"๐ ุชุญุฏูุซ ุณุนุฑ BTC/USDT: {last_price}")
                    else:
                        # ุทุจุงุนุฉ ุฃู ุฑุณุงุฆู ุฃุฎุฑู (ูุซู ุชุฃููุฏ ุงูุงุดุชุฑุงู)
                        logging.info(f"โน๏ธ ุฑุณุงูุฉ ูู ุงูุฎุงุฏู: {data}")

        except websockets.exceptions.ConnectionClosed as e:
            logging.error(f"โ ุงููุทุน ุงูุงุชุตุงู ุจุงูู WebSocket: {e}. ุณุฃุญุงูู ุฅุนุงุฏุฉ ุงูุงุชุตุงู ุจุนุฏ 5 ุซูุงูู...")
            await asyncio.sleep(5)
        except Exception as e:
            logging.error(f"๐ฅ ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน: {e}. ุณุฃุญุงูู ุฅุนุงุฏุฉ ุงูุงุชุตุงู ุจุนุฏ 5 ุซูุงูู...")
            await asyncio.sleep(5)

# --- ููุทุฉ ุงูุทูุงู ุงูุจุฑูุงูุฌ ---
if __name__ == "__main__":
    try:
        # ุชุดุบูู ุงูุฏุงูุฉ ุบูุฑ ุงููุชุฒุงููุฉ
        asyncio.run(okx_websocket_listener())
    except KeyboardInterrupt:
        logging.info("๐ ุชู ุฅููุงู ุงูุจุฑูุงูุฌ ูู ูุจู ุงููุณุชุฎุฏู.")

